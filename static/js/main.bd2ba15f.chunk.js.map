{"version":3,"sources":["misc.js","Business.js","Marketing.js","Manufacturing.js","Computation.js","Projects.js","allProjects.js","App.js","serviceWorker.js","index.js"],"names":["numberWithCommas","x","toString","replace","Business","props","totalClips","clips","cash","cashPerSecond","clipPrice","increasePrice","decreasePrice","demand","wire","makeOneClip","react_default","a","createElement","Fragment","onClick","disabled","toFixed","Marketing","marketing","increaseMarketing","marketingPrice","Manufacturing","wirePrice","clipsPerSecond","buyWire","clippers","buyClipper","clipperPrice","Computation","trust","trustMilestone","processors","memory","ops","creativityFlag","creativity","increaseProcessors","increaseMemory","usedTrust","allProjects","title","priceTag","desc","trigger","cost","state","effect","setOps","setClipperBoost","clipperBoost","setWirePerSpool","Math","floor","wirePerSpool","setCreativity","setDemandFactor","demandFactor","setTrust","setCreativityFlag","setHadwigerFlag","hadwigerFlag","map","proj","i","Object","objectSpread","index","Projects","_useState","useState","_useState2","slicedToArray","available","setAvailable","activeProjects","setActiveProjects","useInterval","add","filter","includes","_available","toConsumableArray","push","apply","showProjects","key","concat","p","className","App","playTime","setPlayTime","_useState3","_useState4","setCash","_useState5","_useState6","setCashPerSecond","_useState7","_useState8","profitList","setProfitList","_useState9","_useState10","setClips","_useState11","_useState12","setTotalClips","_useState13","_useState14","setClipPrice","_useState15","_useState16","setClipsPerSecond","_useState17","_useState18","manualClips","setManualClips","_useState19","_useState20","clipsList","setClipsList","_useState21","_useState22","setDemand","_useState23","_useState24","_useState25","_useState26","setMarketing","_useState27","_useState28","setMarketingPrice","_useState29","_useState30","setWire","_useState31","_useState32","setWirePrice","_useState33","_useState34","_useState35","_useState36","wireCounter","setWireCounter","_useState37","_useState38","setClippers","_useState39","_useState40","setClipperPrice","_useState41","_useState42","_useState43","_useState44","_useState45","_useState46","setTrustMilestone","_useState47","_useState48","fib1","setFib1","_useState49","_useState50","fib2","setFib2","_useState51","_useState52","opFlag","setOpFlag","_useState53","_useState54","setProcessors","_useState55","_useState56","setMemory","_useState57","_useState58","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","_useState65","_useState66","num","_clips","autoClips","roundTo","profit","sold","_sellClips","sellClips","pow","_sellClips2","c","unshift","pop","cTotal","reduce","tot","v","length","profits","pTotal","random","ceil","sin","fibNext","opCycle","opBuf","JSON","stringify","localStorage","setItem","useEffect","lcs","getItem","parse","src_Business","src_Computation","src_Marketing","src_Manufacturing","round","src_Projects","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd2ba15f.chunk.js","sourcesContent":["export const numberWithCommas = x => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n","import React from 'react';\r\n\r\nimport { numberWithCommas } from './misc';\r\n\r\nconst Business = props => {\r\n  const {\r\n    totalClips,\r\n    clips,\r\n    cash,\r\n    cashPerSecond,\r\n    clipPrice,\r\n    increasePrice,\r\n    decreasePrice,\r\n    demand,\r\n    wire,\r\n    makeOneClip\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <h3>Paperclips:</h3>\r\n      {numberWithCommas(totalClips)}\r\n      <br />\r\n      <br />\r\n      <button onClick={makeOneClip} disabled={wire <= 0}>\r\n        Make Paperclip\r\n      </button>\r\n      <br />\r\n      <br />\r\n      <h3>Business:</h3>\r\n      Funds: ${cash.toFixed(2)} (${cashPerSecond.toFixed(2)}/s)\r\n      <br />\r\n      Unsold: {numberWithCommas(clips)}\r\n      <br />\r\n      Clip Price: ${clipPrice.toFixed(2)}\r\n      &nbsp;<button onClick={decreasePrice}>&darr;</button>\r\n      &nbsp;<button onClick={increasePrice}>&uarr;</button>\r\n      <br />\r\n      Public Demand: {(demand * 10).toFixed(0)}%\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Business;\r\n","import React from 'react';\r\n\r\nconst Marketing = props => {\r\n  const { marketing, increaseMarketing, marketingPrice, cash } = props;\r\n\r\n  return (\r\n    <>\r\n      Marketing Level {marketing}\r\n      <br />\r\n      <button onClick={increaseMarketing} disabled={cash < marketingPrice}>\r\n        Increase Marketing Level\r\n      </button>\r\n      &nbsp; Cost: ${marketingPrice.toFixed(2)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Marketing;\r\n","import React from 'react';\r\n\r\nimport { numberWithCommas } from './misc';\r\n\r\nconst Manufacturing = props => {\r\n  const {\r\n    wire,\r\n    wirePrice,\r\n    cash,\r\n    clipsPerSecond,\r\n    buyWire,\r\n    clippers,\r\n    buyClipper,\r\n    clipperPrice\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <h3>Manufacturing</h3>\r\n      Clips per Second: {numberWithCommas(clipsPerSecond)}\r\n      <br />\r\n      <br />\r\n      Wire: {numberWithCommas(wire)}\r\n      <br />\r\n      <button onClick={buyWire} disabled={cash < wirePrice}>\r\n        Buy Wire\r\n      </button>\r\n      &nbsp; Cost: ${wirePrice.toFixed(2)}\r\n      <br />\r\n      <br />\r\n      AutoClippers: {numberWithCommas(clippers)}\r\n      <br />\r\n      <button onClick={buyClipper} disabled={cash < clipperPrice}>\r\n        Buy AutoClipper\r\n      </button>\r\n      &nbsp; Cost: ${clipperPrice.toFixed(2)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Manufacturing;\r\n","import React from 'react';\r\n\r\nimport { numberWithCommas } from './misc';\r\n\r\nconst Computation = props => {\r\n  const {\r\n    trust,\r\n    trustMilestone,\r\n    processors,\r\n    memory,\r\n    ops,\r\n    creativityFlag,\r\n    creativity,\r\n    increaseProcessors,\r\n    increaseMemory\r\n  } = props;\r\n\r\n  const usedTrust = processors + memory;\r\n\r\n  return (\r\n    <>\r\n      <h3>Computational Resources:</h3>\r\n      Trust: {trust}\r\n      <br />\r\n      +1 Trust at: {numberWithCommas(trustMilestone)}\r\n      <br />\r\n      <br />\r\n      Processors: {processors}\r\n      &nbsp;{' '}\r\n      <button onClick={increaseProcessors} disabled={usedTrust >= trust}>\r\n        +1\r\n      </button>\r\n      <br />\r\n      Memory: {memory}\r\n      &nbsp;{' '}\r\n      <button onClick={increaseMemory} disabled={usedTrust >= trust}>\r\n        +1\r\n      </button>\r\n      <br />\r\n      <br />\r\n      Operations: {numberWithCommas(ops)} / {numberWithCommas(memory * 1000)}\r\n      <br />\r\n      {creativityFlag ? <>Creativity: {numberWithCommas(creativity)}</> : ''}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Computation;\r\n","import React, { useState } from 'react';\r\nimport useInterval from '@use-it/interval';\r\n\r\nimport all from './allProjects';\r\nconst allProjects = all.map((proj, i) => ({ ...proj, index: i }));\r\n\r\n// import { numberWithCommas } from './misc';\r\n\r\nconst Projects = props => {\r\n  const [available, setAvailable] = useState([]);\r\n  const { activeProjects, setActiveProjects } = props;\r\n\r\n  const state = { ...props };\r\n  delete state.activeProjects;\r\n  delete state.setActiveProjects;\r\n\r\n  useInterval(() => {\r\n    // find projects that are not currently available or active and whose triggers are met\r\n    const add = allProjects.filter(\r\n      (proj, i) =>\r\n        !activeProjects.includes(i) &&\r\n        !available.includes(proj) &&\r\n        proj.trigger(state)\r\n    );\r\n    // copy the current available projects list and add these new ones ^\r\n    const _available = [...available];\r\n    _available.push(...add);\r\n    setAvailable(_available);\r\n  }, 200);\r\n\r\n  const showProjects = available.map(proj => (\r\n    <React.Fragment key={`proj${proj.index}`}>\r\n      <button\r\n        onClick={() => {\r\n          setActiveProjects([...activeProjects, proj.index]);\r\n          const _available = [...available].filter(p => p !== proj);\r\n          setAvailable(_available);\r\n          proj.effect(state);\r\n        }}\r\n        disabled={!proj.cost(state)}\r\n        className=\"project\"\r\n      >\r\n        <b>\r\n          {proj.title} {proj.priceTag}\r\n        </b>\r\n        <br />\r\n        {proj.desc}\r\n      </button>\r\n      <br />\r\n    </React.Fragment>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <h3>Projects:</h3>\r\n      {showProjects}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","const allProjects = [\r\n  {\r\n    title: 'Improved AutoClippers',\r\n    priceTag: '(750 ops)',\r\n    desc: 'Increases AutoClipper performance by 25%',\r\n    trigger: () => {\r\n      return true;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 750;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 750);\r\n      state.setClipperBoost(state.clipperBoost + 0.25);\r\n    }\r\n  },\r\n  {\r\n    title: 'Even Better AutoClippers',\r\n    priceTag: '(2,500 ops)',\r\n    desc: 'Increases AutoClipper performance by an additional 50%',\r\n    trigger: state => {\r\n      return state.clipperBoost >= 1.25;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 2500;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 2500);\r\n      state.setClipperBoost(state.clipperBoost + 0.5);\r\n    }\r\n  },\r\n  {\r\n    title: 'Improved Wire Extrusion',\r\n    priceTag: '(1,750 ops)',\r\n    desc: '50% more wire supply from every spool',\r\n    trigger: () => {\r\n      return true;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 1750;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 1750);\r\n      state.setWirePerSpool(Math.floor(state.wirePerSpool * 1.5));\r\n    }\r\n  },\r\n  {\r\n    title: 'Optimized AutoClippers',\r\n    priceTag: '(5,000 ops)',\r\n    desc: 'Increases AutoClipper performance by an additional 75%',\r\n    trigger: state => {\r\n      return state.clipperBoost >= 1.75;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 5000;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 5000);\r\n      state.setClipperBoost(state.clipperBoost + 0.75);\r\n    }\r\n  },\r\n  {\r\n    title: 'Optimized Wire Extrusion',\r\n    priceTag: '(3,500 ops)',\r\n    desc: '75% more wire supply from every spool',\r\n    trigger: state => {\r\n      return state.wirePerSpool >= 1500;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 3500;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 3500);\r\n      state.setWirePerSpool(Math.floor(state.wirePerSpool * 1.75));\r\n    }\r\n  },\r\n  {\r\n    title: 'Microlattice Shapecasting',\r\n    priceTag: '(7,500 ops)',\r\n    desc: '100% more wire supply from every spool',\r\n    trigger: state => {\r\n      return state.wirePerSpool >= 2600;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 7500;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 7500);\r\n      state.setWirePerSpool(Math.floor(state.wirePerSpool * 2));\r\n    }\r\n  },\r\n  {\r\n    title: 'Spectral Froth Annealment',\r\n    priceTag: '(12,000 ops)',\r\n    desc: '200% more wire supply from every spool',\r\n    trigger: state => {\r\n      return state.wirePerSpool >= 5000;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 12000;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 12000);\r\n      state.setWirePerSpool(Math.floor(state.wirePerSpool * 3));\r\n    }\r\n  },\r\n  {\r\n    title: 'Quantum Foam Annealment',\r\n    priceTag: '(15,000 ops)',\r\n    desc: '1,000% more wire supply from every spool',\r\n    trigger: state => {\r\n      return state.wirePerSpool >= 15000;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 15000;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 15000);\r\n      state.setWirePerSpool(Math.floor(state.wirePerSpool * 11));\r\n    }\r\n  },\r\n  {\r\n    title: 'New Slogan',\r\n    priceTag: '(25 creat, 2,500 ops)',\r\n    desc: 'Improve marketing effectiveness by 50%',\r\n    trigger: state => {\r\n      return state.creativityFlag;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 2500 && state.creativity >= 25;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 2500);\r\n      state.setCreativity(state.creativity - 25);\r\n      state.setDemandFactor(state.demandFactor * 1.5);\r\n    }\r\n  },\r\n  {\r\n    title: 'Catchy Jingle',\r\n    priceTag: '(45 creat, 4,500 ops)',\r\n    desc: 'Double marketing effectiveness',\r\n    trigger: state => {\r\n      return state.demandFactor >= 1.5;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 4500 && state.creativity >= 45;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 4500);\r\n      state.setCreativity(state.creativity - 45);\r\n      state.setDemandFactor(state.demandFactor * 2);\r\n    }\r\n  },\r\n  {\r\n    title: 'Limerick',\r\n    priceTag: '(10 creat)',\r\n    desc: 'Algorithmically-generated poem (+1 Trust)',\r\n    trigger: state => {\r\n      return state.creativity >= 10;\r\n    },\r\n    cost: state => {\r\n      return state.creativity >= 10;\r\n    },\r\n    effect: state => {\r\n      state.setCreativity(state.creativity - 10);\r\n      state.setTrust(state.trust + 1);\r\n    }\r\n  },\r\n  {\r\n    title: 'Creativity',\r\n    priceTag: '(1,000 ops)',\r\n    desc: 'Use idle operations to generate new problems and new solutions',\r\n    trigger: state => {\r\n      return state.ops >= state.memory * 1000;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 1000;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 1000);\r\n      state.setCreativityFlag(true);\r\n    }\r\n  },\r\n  {\r\n    title: 'Lexical Processing',\r\n    priceTag: '(50 creat)',\r\n    desc: 'Gain ability to interpret and understand human language (+1 Trust)',\r\n    trigger: state => {\r\n      return state.creativity >= 50;\r\n    },\r\n    cost: state => {\r\n      return state.creativity >= 50;\r\n    },\r\n    effect: state => {\r\n      state.setCreativity(state.creativity - 50);\r\n      state.setTrust(state.trust + 1);\r\n    }\r\n  },\r\n  {\r\n    title: 'Combinatory Harmonics',\r\n    priceTag: '(100 creat)',\r\n    desc: 'Daisy, Daisy, give me your answer do... (+1 Trust)',\r\n    trigger: state => {\r\n      return state.creativity >= 100;\r\n    },\r\n    cost: state => {\r\n      return state.creativity >= 100;\r\n    },\r\n    effect: state => {\r\n      state.setCreativity(state.creativity - 100);\r\n      state.setTrust(state.trust + 1);\r\n    }\r\n  },\r\n  {\r\n    title: 'The Hadwiger Problem',\r\n    priceTag: '(150 creat)',\r\n    desc: 'Cubes within cubes within cubes... (+1 Trust)',\r\n    trigger: state => {\r\n      return state.creativity >= 150;\r\n    },\r\n    cost: state => {\r\n      return state.creativity >= 150;\r\n    },\r\n    effect: state => {\r\n      state.setCreativity(state.creativity - 150);\r\n      state.setTrust(state.trust + 1);\r\n      state.setHadwigerFlag(true);\r\n    }\r\n  },\r\n  {\r\n    title: 'The T\\xF3th Sausage Conjecture',\r\n    priceTag: '(200 creat)',\r\n    desc: 'Tubes within tubes within tubes... (+1 Trust)',\r\n    trigger: state => {\r\n      return state.creativity >= 200;\r\n    },\r\n    cost: state => {\r\n      return state.creativity >= 200;\r\n    },\r\n    effect: state => {\r\n      state.setCreativity(state.creativity - 200);\r\n      state.setTrust(state.trust + 1);\r\n    }\r\n  },\r\n  {\r\n    title: 'Hadwiger Clip Diagrams',\r\n    priceTag: '(6,000 ops)',\r\n    desc: 'Increases AutoClipper performance by an additional 500%',\r\n    trigger: state => {\r\n      return state.hadwigerFlag;\r\n    },\r\n    cost: state => {\r\n      return state.ops >= 6000;\r\n    },\r\n    effect: state => {\r\n      state.setOps(state.ops - 6000);\r\n      state.setClipperBoost(state.clipperBoost + 5);\r\n    }\r\n  }\r\n];\r\n\r\nexport default allProjects;\r\n","import React, { useState, useEffect } from 'react';\nimport useInterval from '@use-it/interval';\nimport roundTo from 'round-to';\n\nimport Business from './Business';\nimport Marketing from './Marketing';\nimport Manufacturing from './Manufacturing';\nimport Computation from './Computation';\nimport Projects from './Projects';\n\nconst speedFactor = 1 / 5;\n\n// adjust for debugging\nconst startClips = 0;\nconst startCash = 0;\n\nconst App = () => {\n  // init state\n  const [playTime, setPlayTime] = useState(0);\n\n  const [cash, setCash] = useState(startCash);\n  const [cashPerSecond, setCashPerSecond] = useState(0);\n  const [profitList, setProfitList] = useState([0]);\n\n  const [clips, setClips] = useState(startClips);\n  const [totalClips, setTotalClips] = useState(startClips);\n  const [clipPrice, setClipPrice] = useState(0.25);\n  const [clipsPerSecond, setClipsPerSecond] = useState(0);\n  const [manualClips, setManualClips] = useState(0);\n  const [clipsList, setClipsList] = useState([0]);\n\n  const [demand, setDemand] = useState(1);\n  const [demandFactor, setDemandFactor] = useState(1);\n  const [marketing, setMarketing] = useState(1);\n  const [marketingPrice, setMarketingPrice] = useState(100);\n\n  const [wire, setWire] = useState(1000);\n  const [wirePrice, setWirePrice] = useState(20);\n  const [wirePerSpool, setWirePerSpool] = useState(1000);\n  const [wireCounter, setWireCounter] = useState(0);\n\n  const [clippers, setClippers] = useState(0);\n  const [clipperPrice, setClipperPrice] = useState(5);\n  const [clipperBoost, setClipperBoost] = useState(1);\n\n  const [trust, setTrust] = useState(2);\n  const [trustMilestone, setTrustMilestone] = useState(3000);\n  const [fib1, setFib1] = useState(2);\n  const [fib2, setFib2] = useState(3);\n\n  const [opFlag, setOpFlag] = useState(false);\n  const [processors, setProcessors] = useState(1);\n  const [memory, setMemory] = useState(1);\n  const [ops, setOps] = useState(0);\n\n  const [creativityFlag, setCreativityFlag] = useState(false);\n  const [creativity, setCreativity] = useState(0);\n\n  const [activeProjects, setActiveProjects] = useState([]);\n\n  const [hadwigerFlag, setHadwigerFlag] = useState(false);\n\n  // save/load state\n  const saveState = () => {\n    const state = JSON.stringify({\n      playTime,\n      cash,\n\n      clips,\n      totalClips,\n      clipPrice,\n\n      demandFactor,\n      marketing,\n      marketingPrice,\n\n      wire,\n      wirePrice,\n      wirePerSpool,\n      wireCounter,\n\n      clippers,\n      clipperPrice,\n      clipperBoost,\n\n      trust,\n      trustMilestone,\n      fib1,\n      fib2,\n\n      opFlag,\n      processors,\n      memory,\n      ops,\n\n      creativityFlag,\n      creativity,\n\n      activeProjects,\n\n      hadwigerFlag\n    });\n\n    localStorage.setItem('gameState', state);\n  };\n\n  const loadState = () => {\n    const lcs = localStorage.getItem('gameState');\n    if (!lcs) return;\n\n    const state = JSON.parse(lcs);\n\n    setPlayTime(state.playTime);\n    setCash(state.cash);\n\n    setClips(state.clips);\n    setTotalClips(state.totalClips);\n    setClipPrice(state.clipPrice);\n\n    setDemandFactor(state.demandFactor);\n    setMarketing(state.marketing);\n    setMarketingPrice(state.marketingPrice);\n\n    setWire(state.wire);\n    setWirePrice(state.wirePrice);\n    setWirePerSpool(state.wirePerSpool);\n    setWireCounter(state.wireCounter);\n\n    setClippers(state.clippers);\n    setClipperPrice(state.clipperPrice);\n    setClipperBoost(state.clipperBoost);\n\n    setTrust(state.trust);\n    setTrustMilestone(state.trustMilestone);\n    setFib1(state.fib1);\n    setFib2(state.fib2);\n\n    setOpFlag(state.opFlag);\n    setProcessors(state.processors);\n    setMemory(state.memory);\n    setOps(state.ops);\n\n    setCreativityFlag(state.creativityFlag);\n    setCreativity(state.creativity);\n\n    setActiveProjects(state.activeProjects);\n\n    setHadwigerFlag(state.hadwigerFlag);\n  };\n\n  // make single clip\n  const makeOneClip = () => {\n    setManualClips(manualClips + 1);\n  };\n\n  // make clips\n  const makeClips = (num, _clips) => {\n    if (num > wire) num = wire;\n    return num;\n  };\n\n  // sell clips\n  const sellClips = (num, _clips) => {\n    if (num > _clips) num = _clips;\n\n    _clips -= num;\n    const profit = clipPrice * num;\n    setCash(cash + profit);\n\n    return [num, profit];\n  };\n\n  // increase or decrease the price of a clip\n  const increasePrice = () => {\n    setClipPrice(roundTo(clipPrice + 0.01, 2));\n  };\n\n  const decreasePrice = () => {\n    if (clipPrice < 0.02) return;\n    setClipPrice(roundTo(clipPrice - 0.01, 2));\n  };\n\n  // increase marketing level\n  const increaseMarketing = () => {\n    setMarketing(marketing + 1);\n    setMarketingPrice(marketingPrice * 2);\n    setCash(cash - marketingPrice);\n  };\n\n  // increase processors\n  const increaseProcessors = () => {\n    setProcessors(processors + 1);\n  };\n\n  // increase memory\n  const increaseMemory = () => {\n    setMemory(memory + 1);\n  };\n\n  // buy wire\n  const buyWire = () => {\n    setWire(wire + wirePerSpool);\n    setCash(cash - wirePrice);\n  };\n\n  // buy auto clipper\n  const buyClipper = () => {\n    setClippers(clippers + 1);\n    setCash(cash - clipperPrice);\n    setClipperPrice(1.1 ** (clippers + 1) + 5);\n  };\n\n  // calculate market demand\n  const calcDemand = () => {\n    setDemand(\n      roundTo((0.8 / clipPrice) * 1.1 ** (marketing - 1) * demandFactor, 2)\n    );\n  };\n\n  // tick\n  useInterval(() => {\n    // current clips\n    const _clips = clips + manualClips;\n\n    // create clips with auto-clippers\n    let autoClips = 0;\n    if (clippers > 0) {\n      autoClips = makeClips(\n        roundTo(clippers * clipperBoost * speedFactor, 3),\n        _clips\n      );\n    }\n\n    // update wire amount\n    setWire(wire - autoClips - manualClips);\n\n    // sell clips at a rate according to the market demand\n    let profit = 0;\n    let sold = 0;\n    if (_clips > 0)\n      [sold, profit] = sellClips(\n        roundTo(0.7 * demand ** 1.15 * speedFactor, 3),\n        _clips\n      );\n\n    // update unsold and total clips\n    setClips(_clips + autoClips - sold);\n    setTotalClips(totalClips + autoClips + manualClips);\n\n    // average clips per second\n    const c = [...clipsList];\n\n    if (c.unshift(manualClips + autoClips) > 5) c.pop();\n    setClipsList(c);\n\n    const cTotal = c.reduce((tot, v) => tot + v, 0);\n    setClipsPerSecond(cTotal / speedFactor / c.length);\n    setManualClips(0);\n\n    // average cash per second\n    const profits = [...profitList];\n\n    if (profits.unshift(profit) > 5) profits.pop();\n    setProfitList(profits);\n\n    const pTotal = profits.reduce((tot, v) => tot + v, 0);\n    setCashPerSecond(pTotal / speedFactor / profits.length);\n\n    // update wire price\n    if (Math.random() < 0.015) {\n      setWireCounter(wireCounter + 0.25);\n      setWirePrice(Math.ceil(20 + 6 * Math.sin(wireCounter + 0.25)));\n    }\n\n    // calculate trust (using the fibonacci sequence)\n    if (totalClips >= trustMilestone) {\n      setTrust(trust + 1);\n      const fibNext = fib1 + fib2;\n      setTrustMilestone(fibNext * 1000);\n      setFib1(fib2);\n      setFib2(fibNext);\n    }\n\n    // check/set opFlag\n    if (!opFlag) {\n      if (totalClips >= 2000) setOpFlag(true);\n    }\n    // calculate operations\n    else if (ops < memory * 1000) {\n      let opCycle = processors / speedFactor;\n      const opBuf = memory * 1000 - ops;\n\n      if (opCycle > opBuf) opCycle = opBuf;\n\n      setOps(ops + opCycle);\n    }\n    // calculate creativity\n    else if (creativityFlag)\n      setCreativity(creativity + processors / 20 / speedFactor);\n\n    // increase playTime\n    setPlayTime(playTime + speedFactor);\n  }, 1000 * speedFactor);\n\n  // save every 5 seconds\n  useInterval(saveState, 5000);\n\n  // re-calculate the demand whenever the price or market demand factor changes\n  useEffect(calcDemand, [clipPrice, demandFactor, marketing]);\n\n  // load state on launch\n  useEffect(loadState, []);\n\n  // render\n  return (\n    <table>\n      <tbody>\n        <tr>\n          {/* Row 1, Col 1 */}\n          <td>\n            <Business\n              totalClips={Math.floor(totalClips) + manualClips}\n              clips={Math.floor(clips) + manualClips}\n              cash={cash}\n              cashPerSecond={cashPerSecond}\n              clipPrice={clipPrice}\n              increasePrice={increasePrice}\n              decreasePrice={decreasePrice}\n              demand={demand}\n              wire={wire - manualClips}\n              makeOneClip={makeOneClip}\n            />\n          </td>\n          {/* Row 1, Col 2 */}\n          <td>\n            {opFlag ? (\n              <Computation\n                trust={trust}\n                trustMilestone={trustMilestone}\n                processors={processors}\n                memory={memory}\n                ops={Math.floor(ops)}\n                creativityFlag={creativityFlag}\n                creativity={Math.floor(creativity)}\n                increaseProcessors={increaseProcessors}\n                increaseMemory={increaseMemory}\n              />\n            ) : (\n              ''\n            )}\n          </td>\n        </tr>\n        <tr>\n          {/* Row 2, Col 1 */}\n          <td>\n            <Marketing\n              marketing={marketing}\n              increaseMarketing={increaseMarketing}\n              marketingPrice={marketingPrice}\n              cash={cash}\n            />\n            <br />\n            <br />\n            <Manufacturing\n              wire={Math.floor(wire) - manualClips}\n              wirePrice={wirePrice}\n              cash={cash}\n              clipsPerSecond={Math.round(clipsPerSecond)}\n              buyWire={buyWire}\n              clippers={clippers}\n              buyClipper={buyClipper}\n              clipperPrice={clipperPrice}\n            />\n          </td>\n          {/* Row 2, Col 2 */}\n          <td>\n            {opFlag ? (\n              <Projects\n                activeProjects={activeProjects}\n                setActiveProjects={setActiveProjects}\n                ops={ops}\n                setOps={setOps}\n                creativityFlag={creativityFlag}\n                setCreativityFlag={setCreativityFlag}\n                creativity={creativity}\n                setCreativity={setCreativity}\n                cash={cash}\n                setCash={cash}\n                trust={trust}\n                setTrust={setTrust}\n                clipperBoost={clipperBoost}\n                setClipperBoost={setClipperBoost}\n                wirePerSpool={wirePerSpool}\n                setWirePerSpool={setWirePerSpool}\n                demandFactor={demandFactor}\n                setDemandFactor={setDemandFactor}\n                memory={memory}\n                setMemory={setMemory}\n                processors={processors}\n                setProcessors={setProcessors}\n                hadwigerFlag={hadwigerFlag}\n                setHadwigerFlag={setHadwigerFlag}\n              />\n            ) : (\n              ''\n            )}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}